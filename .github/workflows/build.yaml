name: Build deb packages

on:
  schedule:
    - cron: "0 0 * * 1"
  push:
    branches:
      - 'main'
env:
  RTL8125_VERSION: 9.013.02
  IXGBE_VERSION: 5.20.10
  KERNEL_VERSIONS: /tmp/versions

jobs:
  build_Modules:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        kernel_version() {
          number=$(echo $1 | grep -Eo '[0-9\.]+')

          curl "https://git.proxmox.com/?p=pve-kernel.git;a=blob_plain;f=debian/changelog;hb=refs/heads/$1" \
            | grep 'pve-kernel' \
            | grep -Eo '[0-9]([0-9]|\.|-)+' | sed 's/(^|$)//g' \
            | grep -Eo "^$number.+" \
            | head -n 2
        }

        kernel_version pve-kernel-5.15 >> $KERNEL_VERSIONS
        curl "https://git.proxmox.com/?p=pve-kernel.git;a=blob_plain;f=debian/changelog;hb=HEAD" | grep proxmox-kernel | grep -Eo "\([0-9\.-]+" | cut -c 2- | head -n 2 >> $KERNEL_VERSIONS

        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        echo "deb http://download.proxmox.com/debian/pve bullseye pve-no-subscription" | sudo tee /etc/apt/sources.list.d/pve.list
        echo "deb http://download.proxmox.com/debian/pve bookworm pve-no-subscription" | sudo tee /etc/apt/sources.list.d/pve-bookworm.list

        sudo wget https://enterprise.proxmox.com/debian/proxmox-release-bullseye.gpg -O /etc/apt/trusted.gpg.d/proxmox-release-bullseye.gpg
        sudo wget https://enterprise.proxmox.com/debian/proxmox-release-bookworm.gpg -O /etc/apt/trusted.gpg.d/proxmox-release-bookworm.gpg

        sudo -E apt -qq update
        sudo -E apt -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync python3 git-core curl tree gcc-12

        for version in $(cat $KERNEL_VERSIONS); do
          sudo -E apt -qq install "pve-headers-$version-pve" || true
        done

        sudo -E apt -qq autoremove --purge
        sudo -E apt -qq clean

        sudo ln -s -f /usr/bin/gcc-12 /usr/bin/gcc

        wget https://github.com/goreleaser/nfpm/releases/download/v2.28.0/nfpm_2.28.0_Linux_x86_64.tar.gz
        tar xvf nfpm_2.28.0_Linux_x86_64.tar.gz
        sudo mv nfpm /usr/bin/nfpm && sudo chmod +x /usr/bin/nfpm

    - name: Compile
      run: |
        wget -O "/tmp/ixgbe-$IXGBE_VERSION.tar.gz" \
          "https://onboardcloud.dl.sourceforge.net/project/e1000/ixgbe%20stable/$IXGBE_VERSION/ixgbe-$IXGBE_VERSION.tar.gz"

        mkdir -p ${{ github.workspace }}/artifact

        cd src
        cp Makefile Makefile_backup

        for version in $(cat $KERNEL_VERSIONS); do
          if [[ -d "/lib/modules/$version-pve" ]]; then
            cd ${{ github.workspace }}/src

            cat Makefile_backup > Makefile
            sed "s/\$(shell uname -r)/$version-pve/g" -i Makefile
            make clean
            make modules || true

            if [[ -f r8125.ko ]]; then
              cp -r ${{ github.workspace }}/scripts .
              cp -r ${{ github.workspace }}/changelog.yaml .
              cp -r ${{ github.workspace }}/nfpm.yaml .

              sed "s/SED_PACKAGE_VERSION/$RTL8125_VERSION/g" -i nfpm.yaml
              sed "s/SED_KERNEL_VERSION/$version/g" -i nfpm.yaml

              target="realtek-r8125-proxmox_$RTL8125_VERSION-$version-pve_amd64.deb"
              find .
              nfpm package --config nfpm.yaml --packager deb --target $target

              mv $target "${{ github.workspace }}/artifact"
            fi

            # ixgbe
            cd ${{ github.workspace }}
            rm -rf "ixgbe-$IXGBE_VERSION"
            tar xvf "/tmp/ixgbe-$IXGBE_VERSION.tar.gz"
            cd "ixgbe-$IXGBE_VERSION/src"

            BUILD_KERNEL="$version-pve" make || true

            if [[ -f ixgbe.ko ]]; then
              name="ixgbe-$IXGBE_VERSION-$version.ko"
              mv ixgbe.ko $name
              mv $name "${{ github.workspace }}/artifact"
            fi
            # ixgbe end
          fi
        done

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.RTL8125_VERSION }}
        path: ${{ github.workspace }}/artifact/**/*

  deploy:
    needs: [build_Modules]
    name: Create release and upload artifacts
    runs-on: ubuntu-latest

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: ${{ env.RTL8125_VERSION }}

    - name: Upload build artifacts to cloud
      run: |
        mkdir -p ${{ github.workspace }}/artifact
        md5sum *.deb > ${{ github.workspace }}/artifact/checksum.txt
        md5sum *.ko >> ${{ github.workspace }}/artifact/checksum.txt
        mv *.deb ${{ github.workspace }}/artifact
        mv *.ko ${{ github.workspace }}/artifact

        echo "realtek r8125 version  ${{ env.RTL8125_VERSION }} for proxmox"> release.txt

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ACTION_GITHUB_TOKEN }}
      with:
        name: ${{ env.RTL8125_VERSION }}
        tag_name: ${{ env.RTL8125_VERSION }}
        body_path: release.txt
        files: artifact/**/*

    - name: Delete Artifacts
      uses: geekyeggo/delete-artifact@v1
      with:
        name: ${{ env.RTL8125_VERSION }}

